# .github/workflows/ci.yml

name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # --- 1. Frontend Test Job ---
  # This job runs to test the frontend part of the application.
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: set up node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: install frontend dependencies
        run: npm ci --prefix frontend

      - name: lint frontend
        run: npm run lint --prefix frontend

      - name: build frontend
        run: npm run build --prefix frontend

  # --- 2. Backend Test Job ---
  # This job runs to test the backend services.
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
          cache-dependency-path: '**/go.sum'

      - name: run go tests
        run: |
          echo "discovering go modules from go.work..."
          modules=$(go list -m -f '{{.Dir}}')
          for module in $modules; do
            echo "--- running tests in module: $module ---"
            (cd "$module" && go test -v ./...)
          done

  # --- 3. Build and Push Images Job ---
  # This job runs ONLY on a push to the 'main' branch
  # and depends on the success of the previous test jobs.
  build-and-push:
    # Start after 'test-frontend' and 'test-backend' jobs are finished
    needs: [test-frontend, test-backend]
    # Run only on push to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      # An action to detect which files have changed
      - name: get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44 # This action lists the changed files

      - name: login to azure container registry
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: acr login
        run: az acr login --name ${{ secrets.ACR_LOGIN_SERVER }}

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3
        
      # --- Conditional build steps ---

      - name: build and push creator-service image
        # Run this step only if there are changes in the creator-service or pkg folder
        if: steps.changed-files.outputs.any_changed == 'true' && (contains(steps.changed-files.outputs.all_changed_files, 'services/creator-service/') || contains(steps.changed-files.outputs.all_changed_files, 'pkg/'))
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/creator-service/Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/veritas/creator-service:${{ github.sha }}
          build-args: APP_NAME=creator
          cache-from: |
            type=gha,scope=creator-service
            type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/veritas/creator-service:cache
          cache-to: |
            type=gha,scope=creator-service,mode=max
            type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/veritas/creator-service:cache,mode=max

      - name: build and push redirector-service image
        # Run this step only if there are changes in the redirector-service or pkg folder
        if: steps.changed-files.outputs.any_changed == 'true' && (contains(steps.changed-files.outputs.all_changed_files, 'services/redirector-service/') || contains(steps.changed-files.outputs.all_changed_files, 'pkg/'))
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/redirector-service/Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/veritas/redirector-service:${{ github.sha }}
          build-args: APP_NAME=redirector
          cache-from: |
            type=gha,scope=redirector-service
            type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/veritas/redirector-service:cache
          cache-to: |
            type=gha,scope=redirector-service,mode=max
            type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/veritas/redirector-service:cache,mode=max

      - name: build and push analytics-service image
        # Run this step only if there are changes in the analytics-service or pkg folder
        if: steps.changed-files.outputs.any_changed == 'true' && (contains(steps.changed-files.outputs.all_changed_files, 'services/analytics-service/') || contains(steps.changed-files.outputs.all_changed_files, 'pkg/'))
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/analytics-service/Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/veritas/analytics-service:${{ github.sha }}
          build-args: APP_NAME=analytics
          cache-from: |
            type=gha,scope=analytics-service
            type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/veritas/analytics-service:cache
          cache-to: |
            type=gha,scope=analytics-service,mode=max
            type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/veritas/analytics-service:cache,mode=max

      - name: build and push frontend image
        # Run this step only if there are changes in the frontend folder
        if: steps.changed-files.outputs.any_changed == 'true' && contains(steps.changed-files.outputs.all_changed_files, 'frontend/')
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/veritas/frontend:${{ github.sha }}
          build-args: VITE_API_URL=/api
          cache-from: |
            type=gha,scope=frontend
            type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/veritas/frontend:cache
          cache-to: |
            type=gha,scope=frontend,mode=max
            type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/veritas/frontend:cache,mode=max